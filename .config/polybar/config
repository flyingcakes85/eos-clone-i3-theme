; The 'colors' section defines the colors I've used in the config.
; This will allow easy changing of colors.

[colors]
background_col          = #70304377
; you know what this means

white                   = #ffffff   
; for most of the text

halfwhite               = #50ffffff   
; for separators, which should have half transparency

red                     = #EF5350    
; for the firefox icon

green                   = #4caf50
; for the thunar icon

blue                    = #80283593
; for the arch icon

lightblue               = #B3E5FC
lightgreen              = #A5D6A7
; i3 module


; here we have the bar definition

[bar/mybar]

; Use either of the following command to list available outputs:
; If unspecified, the application will pick the first one it finds.
; $ polybar -m | cut -d ':' -f 1
; $ xrandr -q | grep " connected" | cut -d ' ' -f1
; If no monitor is given, the primary monitor is used if it exists
monitor = VGA-1

; YOU MAY WANT TO UNCOMMENT THE OPTION
; Use the specified monitor as a fallback if the main one is not found.
;monitor-fallback =

; YOU MAY WANT TO UNCOMMENT THE OPTION
; Require the monitor to be in connected state
; XRandR sometimes reports my monitor as being disconnected (when in use)
;monitor-strict = false

; YOU MAY WANT TO UNCOMMENT THE OPTION
; Use fuzzy matching for monitors (only ignores dashes -)
; Useful when monitors are named differently with different drivers.
;monitor-exact = true

; Tell the Window Manager not to configure the window.
; Use this to detach the bar if your WM is locking its size/position.
; Note: With this most WMs will no longer reserve space for 
; the bar and it will overlap other windows. You need to configure
; your WM to add a gap where the bar will be placed.
override-redirect = false

; Put the bar at the bottom of the screen
bottom = true

; Prefer fixed center position for the `modules-center` block
fixed-center = true

; Dimension defined as pixel value (e.g. 35) or percentage (e.g. 50%),
; the percentage can optionally be extended with a pixel offset like so:
; 50%:-10, this will result in a width or height of 50% minus 10 pixels
width = 100%
height = 30

; Offset defined as pixel value (e.g. 35) or percentage (e.g. 50%)
; the percentage can optionally be extended with a pixel offset like so:
; 50%:-10, this will result in an offset in the x or y direction 
; of 50% minus 10 pixels
offset-x = 0
offset-y = 0

; Background ARGB color (e.g. #f00, #ff992a, #ddff1023)
background = ${colors.background_col}

; Foreground ARGB color (e.g. #f00, #ff992a, #ddff1023)
foreground = #700

; Under-/overline pixel size and argb color
; Individual values can be defined using:
;   {overline,underline}-size
;   {overline,underline}-color
line-size = 0
line-color = #fff

; Number of spaces to add at the beginning/end of the bar
; Individual side values can be defined using:
;   padding-{left,right}
padding-right = 3

; Number of spaces to add before/after each module
; Individual side values can be defined using:
;   module-margin-{left,right}
module-margin = 1

; Value used for drawing rounded corners
; Note: This shouldn't be used together with border-size because the border 
; doesn't get rounded. For this to work you may also need to enable 
; pseudo-transparency or use a compositor like compton.
; Individual top/bottom values can be defined using:
;   radius-{top,bottom}
radius = 0.0

; Values applied to all borders
; Individual side values can be defined using:
;   border-{left,top,right,bottom}-size
;   border-{left,top,right,bottom}-color
; The top and bottom borders are added to the bar height, so the effective
; window height is:
;   height + border-top-size + border-bottom-size
; Meanwhile the effective window width is defined entirely by the width key and
; the border is placed within this area. So you effectively only have the
; following horizontal space on the bar:
;   width - border-right-size - border-left-size
; border-size can be defined as pixel value (e.g. 35) or percentage (e.g. 50%),
; the percentage can optionally be extended with a pixel offset like so:
; 50%:-10, this will result in 50% minus 10 pixels. The percentage is relative
; to the monitor width or height depending on the border direction. 
border-size =
border-color =


;    ______            __      
;   / ____/___  ____  / /______
;  / /_  / __ \/ __ \/ __/ ___/
; / __/ / /_/ / / / / /_(__  ) 
;/_/    \____/_/ /_/\__/____/  

; Fonts are defined using <font-name>;<vertical-offset>
; Font names are specified using a fontconfig pattern.
;   font-0 = NotoSans-Regular:size=8;2
;   font-1 = MaterialIcons:size=10
;   font-2 = Termsynu:size=8;-1
;   font-3 = FontAwesome:size=10
; See the Fonts wiki page for more details                       
font-0 = Manrope:regular:size=10;3
font-1 = Anonymice Nerd Font:regular:size=20;5
font-2 = Anonymice Nerd Font:regular:size=16;5
font-3 = Anonymice Nerd Font:regular:size=15;4

; Modules are added to one of the available blocks
;   modules-left = cpu ram
;   modules-center = xwindow xbacklight
;   modules-right = ipc clock
modules-left = eos sep terminal sps firefox sps thunar sps sep i3
modules-center = 
modules-right =  alsa sps settings sps power sps date

; The separator will be inserted between the output of each module
separator =  

; This value is used to add extra spacing between elements
; @deprecated: This parameter will be removed in an upcoming version
spacing = 

; Opacity value between 0.0 and 1.0 used on fade in/out
dim-value = 1.0

; Value to be used to set the WM_NAME atom
; If the value is empty or undefined, the atom value
; will be created from the following template: polybar-[BAR]_[MONITOR]
; NOTE: The placeholders are not available for custom values
wm-name = i3

; Position of the system tray window
; If empty or undefined, tray support will be disabled
; NOTE: A center aligned tray will cover center aligned modules
;
; Available positions:
;   left
;   center
;   right
;   none
tray-position = right

; If true, the bar will not shift its
; contents when the tray changes
tray-detached = false

; Tray icon max size
tray-maxsize = 16

; Background color for the tray container 
; ARGB color (e.g. #f00, #ff992a, #ddff1023)
; By default the tray container will use the bar
; background color.
tray-background = ${colors.background_col}

;offset defined as pixel value (e.g. 35) or percentage (e.g. 50%)
tray-offset-x = 0
tray-offset-y = 0

; Pad the sides of each tray icon
tray-padding = 0

; Scale factor for tray clients
tray-scale = 1.0

; Restack the bar window and put it above the
; selected window manager's root
;
; Fixes the issue where the bar is being drawn
; on top of fullscreen window's
;
; Currently supported WM's:
;   bspwm
;   i3 (requires: `override-redirect = true`)
wm-restack = i3

; Set a DPI values used when rendering text
; This only affects scalable fonts
; Set this to 0 to let polybar calculate the dpi from the screen size.
; dpi = 
dpi-x = 
dpi-y = 

; Enable support for inter-process messaging
; See the Messaging wiki page for more details.
enable-ipc = false

; Fallback click handlers that will be called if
; there's no matching module handler found.
click-left = 
click-middle = 
click-right =
scroll-up =
scroll-down =
double-click-left =
double-click-middle =
double-click-right =

; Requires polybar to be built with xcursor support (xcb-util-cursor)
; Possible values are:
; - default   : The default pointer as before, can also be an empty string (default)
; - pointer   : Typically in the form of a hand
; - ns-resize : Up and down arrows, can be used to indicate scrolling
cursor-click = 
cursor-scroll = 

;    _ _____
;   (_)__  /
;  / / /_ < 
; / /___/ / 
;/_//____/  
          
[module/i3]
type = internal/i3

; Only show workspaces defined on the same output as the bar
;
; Useful if you want to show monitor specific workspaces
; on different bars
;
; Default: false
pin-workspaces = true

; This will split the workspace name on ':'
; Default: false
strip-wsnumbers = true

; This will split the workspace name on ':'
; Default: false
enable-click = true

; Create scroll handlers used to cycle workspaces
; Default: true
enable-scroll = true

; Wrap around when reaching the first/last workspace
; Default: true
wrapping-scroll = false

; Set the scroll cycle direction
; Default: true
reverse-scroll = false

; ws-icon-[0-9]+ = <label>;<icon>
; NOTE: The <label> needs to match the name of the i3 workspace
; Neither <label> nor <icon> can contain a semicolon (;)
ws-icon-0 = 1;%{T4}
ws-icon-1 = 2;%{T4}爵
ws-icon-2 = 3;%{T4}
ws-icon-3 = 4;%{T4}
ws-icon-4 = 5;%{T4}
ws-icon-5 = 6;%{T4}
ws-icon-6 = 7;%{T4}
ws-icon-7 = 8;%{T4}
ws-icon-8 = 9;%{T4}
ws-icon-9 = 0;%{T4}
ws-icon-default = %{T4}
; NOTE: You cannot skip icons, e.g. to get a ws-icon-6
; you must also define a ws-icon-5.
; NOTE: Icon will be available as the %icon% token inside label-*
;
; See this page to know how to generate ws-icon list: 
; https://github.com/polybar/polybar/wiki/Module:-i3#generate-ws-icon-list


; Available tags:
;   <label-state> (default) - gets replaced with <label-(focused|unfocused|visible|urgent)>
;   <label-mode> (default)

; Use fuzzy (partial) matching on labels when assigning 
; icons to workspaces
; Example: code;♚ will apply the icon to all workspaces 
; containing 'code' in the label
; Default: false
fuzzy-match = true

; Available tokens:
;   %name%
;   %icon%
;   %index%
;   %output%
; Default: %icon%  %name%
label-unfocused = %icon%
label-unfocused-padding = 5
label-unfocused-foreground = ${colors.lightblue}

label-focused = %icon%
label-focused-foreground = ${colors.lightgreen}
label-focused-background = ${colors.background_col}
label-focused-underline = #f92672
label-focused-padding = 5

;  _______              
; /_  __(_)___ ___  ___ 
;  / / / / __ `__ \/ _ \
; / / / / / / / / /  __/
;/_/ /_/_/ /_/ /_/\___/ 

[module/date]
type = internal/date

; Seconds to sleep between updates
interval = 1.0

; See "http://en.cppreference.com/w/cpp/io/manip/put_time" for details on how to format the date string
; NOTE: if you want to use syntax tags here you need to use %%{...}
date = %A %d, %b/%Y

; Optional time format
time = %H:%M

; if `date-alt` or `time-alt` is defined, clicking
; the module will toggle between formats
date-alt = %A, %d %B %Y
time-alt = %H:%M:%S

; Available tokens:
;   %date%
;   %time%
; Default: %date%
label = %time%
label-font = 0
label-foreground = #ffffff


;An empty module used to add 1 unit spacings whenever needed
[module/sps]
type = custom/text
content = " "
content-padding = 0

;    __                           __                  
;   / /   ____ ___  ______  _____/ /_  ___  __________
;  / /   / __ `/ / / / __ \/ ___/ __ \/ _ \/ ___/ ___/
; / /___/ /_/ / /_/ / / / / /__/ / / /  __/ /  (__  ) 
;/_____/\__,_/\__,_/_/ /_/\___/_/ /_/\___/_/  /____/ 

; Edit the click-left property to put in the 
; terminal launch command for your application. 
; Ensure the command is followed by an ampersand.
;
; More such buttons can be created by following
; the template. Make sure to add your custom modules
; in the modules list, otherwise they won't show up.
[module/terminal]
type = custom/text

click-left = xfce4-terminal &

content = "%{T2}%{T-}"
content-foreground = ${colors.white}
content-background = ${colors.background_col}
content-padding = 1


; Edit the click-left property to put in the 
; terminal launch command for your application. 
; Ensure the command is followed by an ampersand.
;
; More such buttons can be created by following
; the template. Make sure to add your custom modules
; in the modules list, otherwise they won't show up.
[module/firefox]
type = custom/text

click-left = firefox &

content = "%{T2}%{T-}"
content-foreground = ${colors.red}
content-background = ${colors.background_col}
content-padding = 1


; Edit the click-left property to put in the 
; terminal launch command for your application. 
; Ensure the command is followed by an ampersand.
;
; More such buttons can be created by following
; the template. Make sure to add your custom modules
; in the modules list, otherwise they won't show up.
[module/thunar]
type = custom/text

click-left = thunar &

content = "%{T2}%{T-}"
content-foreground = ${colors.green}
content-background = ${colors.background_col}
content-padding = 1


;    __________  _____    ____        __  __            
;   / ____/ __ \/ ___/   / __ )__  __/ /_/ /_____  ____ 
;  / __/ / / / /\__ \   / __  / / / / __/ __/ __ \/ __ \
; / /___/ /_/ /___/ /  / /_/ / /_/ / /_/ /_/ /_/ / / / /
;/_____/\____//____/  /_____/\__,_/\__/\__/\____/_/ /_/ 

; This is the leftmost button. 
; I've used the arch logo for icon,
; because Nerd Fonts doesn't have the logo fot EOS.                                                      
[module/eos]
type = custom/text

click-left = rofi -show drun -theme "conf_drun.rasi" &

content = "%{T3} %{T-} Endeavour  OS"
content-foreground = ${colors.white}
content-background = ${colors.blue}
content-padding = 3

; The semi-transparent thingy
[module/sep]
type = custom/text

content = "%{T2}|%{T-}"
content-foreground = ${colors.halfwhite}
content-background = ${colors.background_col}
content-padding = 1

;    ____        __  __                  
;   / __ )__  __/ /_/ /_____  ____  _____
;  / __  / / / / __/ __/ __ \/ __ \/ ___/
; / /_/ / /_/ / /_/ /_/ /_/ / / / (__  ) 
;/_____/\__,_/\__/\__/\____/_/ /_/____/ 

[module/settings]
type = custom/text

click-left = "~/.config/rofi/scripts/rofi_conf_menu.sh"

content = "%{T4}漣%{T-}"
content-foreground = ${colors.white}
content-background = ${colors.background_col}
content-padding = 1



[module/power]
type = custom/text

click-left = "~/.config/rofi/scripts/rofi_power_menu.sh"

content = "%{T4}拉%{T-}"
content-foreground = ${colors.white}
content-background = ${colors.background_col}
content-padding = 1

[module/alsa]
type = internal/alsa

; You can find the different card numbers in `/proc/asound/cards`
;;master-soundcard = default
;;speaker-soundcard = default
;;headphone-soundcard = default

; Default: Master
;;master-mixer = Master

; Optionally define speaker and headphone mixers
; Default: none
;;speaker-mixer = Speaker
; Default: none
;;headphone-mixer = Headphone

; Default: 5
;;interval = 5

; Available tags:
;   <label-volume> (default)
;   <ramp-volume>
;   <bar-volume>
format-volume = <ramp-volume>
ramp-volume-foreground = ${colors.white}
; Available tags:
;   <label-muted> (default)
;   <ramp-volume>
;   <bar-volume>
;format-muted = <label-muted>

; Available tokens:
;   %percentage% (default)
label-volume = %percentage%%
label-foreground = ${colors.white}
; Available tokens:
;   %percentage% (default
label-muted = ﱝ
label-muted-foreground = ${colors.white}

ramp-volume-0 = 奄
ramp-volume-1 = 奔
ramp-volume-2 = 墳